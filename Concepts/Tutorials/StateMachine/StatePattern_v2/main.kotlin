class Context(private var state: State) {
    fun print(text: String) = state.handle(text)
}

interface State {
    fun handle(text: String)
}

class UpperCaseState : State {
    override fun handle(text: String) = println(text.toUpperCase())
}

class LowerCaseState : State {
    override fun handle(text: String) = println(text.toLowerCase())
}

/*

You’ll find a very similar example (Java based) here: https://en.wikipedia.org/wiki/State_pattern. One difference you’ll notice is that the Wikipedia example also triggers state transitions, e.g.

*/